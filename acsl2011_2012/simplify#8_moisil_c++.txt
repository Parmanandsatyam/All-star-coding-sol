#include <cstdio>
#include <cstring>

using namespace std;


struct valori{
    int biti[10];
    valori(){
        for (int i = 0; i < 10; ++ i){
            biti[i] = 0;
        }
    }
}a[10];

int n;
char c[100];
valori rez;

void zero(){
    n = 0;
    for (int i = 0; i < 100; ++ i){
        c[i] = 0;
    }
}

void initiaza(){
    a[0].biti[0] = 0;
    a[0].biti[1] = 0;
    a[0].biti[2] = 1;
    a[0].biti[3] = 1;
    a[1].biti[0] = 0;
    a[1].biti[1] = 1;
    a[1].biti[2] = 0;
    a[1].biti[3] = 1;
}

int sari (int i ){
    i --;
    while (c[i] != '('){
        i --;
    }
    return i;
}

int verf (int i, int n){
    for (; i <= n; ++ i){
        if (c[i] == '*' || c[i] == '+'){
            return 0;
        }
    }
    return 1;
}

valori f (int st, int dr){
    /// negat
    if (c[st] == '~' && (verf (st, dr) || c[dr] == ')' && c[st + 1] == '(')){
        valori rez1 = f (st + 1, dr);
        for (int i = 0; i < n; ++ i){
            rez1.biti[i] = !rez1.biti[i];
        }
        return rez1;
    }
    /// scoate paranteze
    if (c[st] == '(' && c[dr] == ')'){
        return f (st + 1, dr - 1);
    }
    /// daca are doar o valoarea;
    if (dr == st){
        if (c[dr] == 'A'){
            return a[0];
        }
        if (c[dr] == 'B'){
            return a[1];
        }
        if (c[dr] == '0'){
            return a[2];
        }
        if (c[dr] == '1'){
            return a[3];
        }
    }

    /// plus
    for (int i = dr; i >= st; -- i){
        if (c[i] == ')'){
            i = sari(i);
            continue;
        }
        if (c[i] == '+'){
            valori rez;
            valori rez1 = f (st, i - 1);
            valori rez2 = f (i + 1, dr);
            for (int i = 0; i < n; ++ i){
                rez.biti[i] = rez1.biti[i] | rez2.biti[i];
            }
            return rez;
        }
    }
    /// ori
    for (int i = dr; i >= st; -- i){
        if (c[i] == ')'){
            i = sari(i);
            continue;
        }
        if (c[i] == '*'){
            valori rez;
            valori rez1 = f (st, i - 1);
            valori rez2 = f (i + 1, dr);
            for (int i = 0; i < n; ++ i){
                rez.biti[i] = rez1.biti[i] * rez2.biti[i];
            }
            return rez;
        }
    }
}

int negheaza(valori &x){
    for (int i = 0; i < n; ++ i){
        x.biti[i] = !x.biti[i];
    }
    return 1;
}

int verf (valori x){
    for (int i = 0; i < n; ++ i){
        if (x.biti[i] != rez.biti[i]){
            return 0;
        }
    }
    return 1;
}

int verificaCuValori (int x1, int x2, int x3, int x4){
    if (rez.biti[0] != x1){
        return 0;
    }
    if (rez.biti[1] != x2){
        return 0;
    }
    if (rez.biti[2] != x3){
        return 0;
    }
    if (rez.biti[3] != x4){
        return 0;
    }
    return 1;
}

void afisare(){
    /*for (int i = 0; i < n; ++ i){
        printf ("%d ", rez.biti[i]);
    }*/
    int  s = 0;
    for (int i = 0; i < n; ++ i){
        s += rez.biti[i];
    }
    if (s == 0){
        printf ("0\n");
        return;
    }else
    if (s == n){
        printf ("1\n");
    }else
    if (verf (a[0])){
        printf ("A\n");
    }else
    if (verf (a[1])){
        printf ("B\n");
    }else
    if (negheaza (a[0]) && verf (a[0])){
        printf ("~A\n");
    }else
    if (negheaza (a[1]) && verf (a[1])){
        printf ("~B\n");
    }else
    if (n <= 2){
        return;
    }else

    /// plus
    if (verificaCuValori (0, 1, 1, 1)){
        printf ("A+B\n");
    }else
    if (verificaCuValori (1, 1, 0, 1)){
        printf ("~A+B\n");
    }else
    if (verificaCuValori (1, 0, 1, 1)){
        printf ("A+~B\n");
    }else
    if (verificaCuValori (1, 1, 1, 0)){
        printf ("~A+~B\n");
    }else
    /// ori
    if (verificaCuValori (0, 0, 0, 1)){
        printf ("A*B\n");
    }else
    if (verificaCuValori (0, 1, 0, 0)){
        printf ("~A*B\n");
    }else
    if (verificaCuValori (0, 0, 1, 0)){
        printf ("A*~B\n");
    }else
    if (verificaCuValori (1, 0, 0, 0)){
        printf ("~A*~B\n");
    }
}

void citire(){
    initiaza();
    gets (c);
    int s = 0;
    if (strchr (c, 'A')){
        s ++;
    }
    if (strchr (c, 'B')){
        s ++;
    }
    if (s == 1){
        if (strchr (c, 'A')){
            a[0].biti[0] = 0;
            a[0].biti[1] = 1;
        }else{
            a[1].biti[0] = 0;
            a[1].biti[1] = 1;
        }
    }
    n = 1 << s;
    for (int i = 0; i < n; ++ i){
        a[3].biti[i] = 1;
    }
    rez = f(0, strlen (c) - 1);
    afisare();
}

int main()
{
    freopen ("fis.in","r", stdin);
    for (int w = 0; w < 10; ++ w){
        citire();
        zero();
    }
    return 0;
}
